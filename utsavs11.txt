<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Matrix Rain Debug</title>
  <style>
    html, body {
      margin: 0;
      padding: 0;
      height: 100%;
      background: black;
      overflow: hidden;
    }
    canvas {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      z-index: -1;
      background: black;
    }
  </style>
</head>
<body>
  <canvas id="matrixCanvas"></canvas>

  <script>
    try {
      const canvas = document.getElementById('matrixCanvas');
      const ctx = canvas.getContext('2d');

      if (!ctx) {
        alert("Canvas 2D context not supported.");
        throw new Error("2D context missing");
      }

      function resizeCanvas() {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
      }

      resizeCanvas();
      window.addEventListener('resize', resizeCanvas);

      const characters = 'HAPPY BIRTHDAY'ðŸŽ‰ðŸŽ‚LOVEâœ¨1234567890@#$%^&*'.split('');
      const fontSize = 18;
      const columns = Math.floor(canvas.width / fontSize);
      const drops = Array(columns).fill(1);

      function drawMatrix() {
        ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        ctx.fillStyle = '#0F0';
        ctx.font = `${fontSize}px monospace`;

        for (let i = 0; i < drops.length; i++) {
          const text = characters[Math.floor(Math.random() * characters.length)];
          const x = i * fontSize;
          const y = drops[i] * fontSize;
          ctx.fillText(text, x, y);

          if (y > canvas.height && Math.random() > 0.975) {
            drops[i] = 0;
          }

          drops[i]++;
        }
      }

      console.log("Starting Matrix Rain...");
      setInterval(drawMatrix, 33);

    } catch (e) {
      console.error("Matrix Rain failed:", e);
    }
  </script>
</body>
</html>
